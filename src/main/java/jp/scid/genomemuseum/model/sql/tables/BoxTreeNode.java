/**
 * This class is generated by jOOQ
 */
package jp.scid.genomemuseum.model.sql.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.2.0"},
                            comments = "This class is generated by jOOQ")
public class BoxTreeNode extends org.jooq.impl.UpdatableTableImpl<jp.scid.genomemuseum.model.sql.tables.records.BoxTreeNodeRecord> {

	private static final long serialVersionUID = 566859555;

	/**
	 * The singleton instance of V1_0_0.BOX_TREE_NODE
	 */
	public static final jp.scid.genomemuseum.model.sql.tables.BoxTreeNode BOX_TREE_NODE = new jp.scid.genomemuseum.model.sql.tables.BoxTreeNode();

	/**
	 * The class holding records for this type
	 */
	private static final java.lang.Class<jp.scid.genomemuseum.model.sql.tables.records.BoxTreeNodeRecord> __RECORD_TYPE = jp.scid.genomemuseum.model.sql.tables.records.BoxTreeNodeRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<jp.scid.genomemuseum.model.sql.tables.records.BoxTreeNodeRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public final org.jooq.TableField<jp.scid.genomemuseum.model.sql.tables.records.BoxTreeNodeRecord, java.lang.Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * CONSTRAINT FK_BOX_PARENT_ID
	 * FOREIGN KEY (PARENT_ID, PARENT_ID)
	 * REFERENCES V1_0_0.BOX_TREE_NODE (ID)
	 * </pre></code>
	 */
	public final org.jooq.TableField<jp.scid.genomemuseum.model.sql.tables.records.BoxTreeNodeRecord, java.lang.Long> PARENT_ID = createField("PARENT_ID", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<jp.scid.genomemuseum.model.sql.tables.records.BoxTreeNodeRecord, java.lang.String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<jp.scid.genomemuseum.model.sql.tables.records.BoxTreeNodeRecord, java.lang.Integer> NODE_TYPE = createField("NODE_TYPE", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * CONSTRAINT FK_BOX_TABLE_PROPERTY_ID
	 * FOREIGN KEY (TABLE_PROPERTY_ID)
	 * REFERENCES V1_0_0.TABLE_VIEW_PROPERTY (ID)
	 * </pre></code>
	 */
	public final org.jooq.TableField<jp.scid.genomemuseum.model.sql.tables.records.BoxTreeNodeRecord, java.lang.Long> TABLE_PROPERTY_ID = createField("TABLE_PROPERTY_ID", org.jooq.impl.SQLDataType.BIGINT, this);

	public BoxTreeNode() {
		super("BOX_TREE_NODE", jp.scid.genomemuseum.model.sql.V1_0_0.V1_0_0);
	}

	public BoxTreeNode(java.lang.String alias) {
		super(alias, jp.scid.genomemuseum.model.sql.V1_0_0.V1_0_0, jp.scid.genomemuseum.model.sql.tables.BoxTreeNode.BOX_TREE_NODE);
	}

	@Override
	public org.jooq.UniqueKey<jp.scid.genomemuseum.model.sql.tables.records.BoxTreeNodeRecord> getMainKey() {
		return jp.scid.genomemuseum.model.sql.Keys.CONSTRAINT_5D3;
	}

	@Override
	@SuppressWarnings("unchecked")
	public java.util.List<org.jooq.UniqueKey<jp.scid.genomemuseum.model.sql.tables.records.BoxTreeNodeRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<jp.scid.genomemuseum.model.sql.tables.records.BoxTreeNodeRecord>>asList(jp.scid.genomemuseum.model.sql.Keys.CONSTRAINT_5D3, jp.scid.genomemuseum.model.sql.Keys.CONSTRAINT_5, jp.scid.genomemuseum.model.sql.Keys.CONSTRAINT_5D);
	}

	@Override
	@SuppressWarnings("unchecked")
	public java.util.List<org.jooq.ForeignKey<jp.scid.genomemuseum.model.sql.tables.records.BoxTreeNodeRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<jp.scid.genomemuseum.model.sql.tables.records.BoxTreeNodeRecord, ?>>asList(jp.scid.genomemuseum.model.sql.Keys.FK_BOX_PARENT_ID, jp.scid.genomemuseum.model.sql.Keys.FK_BOX_TABLE_PROPERTY_ID);
	}

	@Override
	public jp.scid.genomemuseum.model.sql.tables.BoxTreeNode as(java.lang.String alias) {
		return new jp.scid.genomemuseum.model.sql.tables.BoxTreeNode(alias);
	}
}
