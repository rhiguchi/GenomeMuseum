/**
 * This class is generated by jOOQ
 */
package jp.scid.genomemuseum.model.sql.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.2.0"},
                            comments = "This class is generated by jOOQ")
public class MuseumExhibit extends org.jooq.impl.UpdatableTableImpl<jp.scid.genomemuseum.model.sql.tables.records.MuseumExhibitRecord> {

	private static final long serialVersionUID = -398466709;

	/**
	 * The singleton instance of V1_0_0.MUSEUM_EXHIBIT
	 */
	public static final jp.scid.genomemuseum.model.sql.tables.MuseumExhibit MUSEUM_EXHIBIT = new jp.scid.genomemuseum.model.sql.tables.MuseumExhibit();

	/**
	 * The class holding records for this type
	 */
	private static final java.lang.Class<jp.scid.genomemuseum.model.sql.tables.records.MuseumExhibitRecord> __RECORD_TYPE = jp.scid.genomemuseum.model.sql.tables.records.MuseumExhibitRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<jp.scid.genomemuseum.model.sql.tables.records.MuseumExhibitRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public final org.jooq.TableField<jp.scid.genomemuseum.model.sql.tables.records.MuseumExhibitRecord, java.lang.Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<jp.scid.genomemuseum.model.sql.tables.records.MuseumExhibitRecord, java.lang.String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<jp.scid.genomemuseum.model.sql.tables.records.MuseumExhibitRecord, java.lang.Integer> SEQUENCE_LENGTH = createField("SEQUENCE_LENGTH", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<jp.scid.genomemuseum.model.sql.tables.records.MuseumExhibitRecord, java.lang.String> ACCESSION = createField("ACCESSION", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<jp.scid.genomemuseum.model.sql.tables.records.MuseumExhibitRecord, java.lang.String> NAMESPACE = createField("NAMESPACE", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<jp.scid.genomemuseum.model.sql.tables.records.MuseumExhibitRecord, java.lang.Integer> VERSION = createField("VERSION", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<jp.scid.genomemuseum.model.sql.tables.records.MuseumExhibitRecord, java.lang.String> DEFINITION = createField("DEFINITION", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<jp.scid.genomemuseum.model.sql.tables.records.MuseumExhibitRecord, java.lang.String> SOURCE_TEXT = createField("SOURCE_TEXT", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<jp.scid.genomemuseum.model.sql.tables.records.MuseumExhibitRecord, java.lang.String> ORGANISM = createField("ORGANISM", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<jp.scid.genomemuseum.model.sql.tables.records.MuseumExhibitRecord, java.sql.Date> DATE = createField("DATE", org.jooq.impl.SQLDataType.DATE, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<jp.scid.genomemuseum.model.sql.tables.records.MuseumExhibitRecord, java.lang.Integer> SEQUENCE_UNIT = createField("SEQUENCE_UNIT", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<jp.scid.genomemuseum.model.sql.tables.records.MuseumExhibitRecord, java.lang.String> MOLECULE_TYPE = createField("MOLECULE_TYPE", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<jp.scid.genomemuseum.model.sql.tables.records.MuseumExhibitRecord, java.lang.Integer> FILE_TYPE = createField("FILE_TYPE", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<jp.scid.genomemuseum.model.sql.tables.records.MuseumExhibitRecord, java.lang.String> FILE_URI = createField("FILE_URI", org.jooq.impl.SQLDataType.VARCHAR, this);

	public MuseumExhibit() {
		super("MUSEUM_EXHIBIT", jp.scid.genomemuseum.model.sql.V1_0_0.V1_0_0);
	}

	public MuseumExhibit(java.lang.String alias) {
		super(alias, jp.scid.genomemuseum.model.sql.V1_0_0.V1_0_0, jp.scid.genomemuseum.model.sql.tables.MuseumExhibit.MUSEUM_EXHIBIT);
	}

	@Override
	public org.jooq.UniqueKey<jp.scid.genomemuseum.model.sql.tables.records.MuseumExhibitRecord> getMainKey() {
		return jp.scid.genomemuseum.model.sql.Keys.CONSTRAINT_DF;
	}

	@Override
	@SuppressWarnings("unchecked")
	public java.util.List<org.jooq.UniqueKey<jp.scid.genomemuseum.model.sql.tables.records.MuseumExhibitRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<jp.scid.genomemuseum.model.sql.tables.records.MuseumExhibitRecord>>asList(jp.scid.genomemuseum.model.sql.Keys.CONSTRAINT_DF, jp.scid.genomemuseum.model.sql.Keys.CONSTRAINT_D);
	}

	@Override
	public jp.scid.genomemuseum.model.sql.tables.MuseumExhibit as(java.lang.String alias) {
		return new jp.scid.genomemuseum.model.sql.tables.MuseumExhibit(alias);
	}
}
